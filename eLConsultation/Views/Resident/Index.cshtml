@model eLConsultation.Data.ResidentSearch
@{
    ViewBag.Title = "Քաղաքացիներ";
}
<div class="for-Toolbar">
    @(Html.Kendo().ToolBar()
    .Name("ToolBar")
    .Items(items =>
    {
        items.Add().Template("<button type=\"button\" name=\"Insert\" onclick=\"InsertResident()\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-plus\"></i>&nbsp; Ավելացնել</button>");
    })
    )
    @* Search Panel - Right Slide *@
    <div class="right-slidePanel">
        <div class="slidePanel-Content">
            <div class="slidePanel-btn">
            </div>
            <div class="slidePanel-Content-fields create-item">
                <h4>Որոնման դաշտեր</h4>
                <div class="form-group margin-10-0">
                    @Html.Kendo().TextBoxFor(model => model.FirstName).HtmlAttributes(new { placeholder = "անուն" })
                </div>
                <div class="form-group margin-10-0">
                    @Html.Kendo().TextBoxFor(model => model.LastName).HtmlAttributes(new { placeholder = "ազգանուն" })
                </div>
                <div class="form-group margin-10-0 align-right">
                    <button type="submit" id="btnSearch" class="btn btn-primary btn-sm" onclick="return Search();"><i class="icons icon-magnifier"></i>&nbsp;Որոնել</button>
                    <button type="submit" id="btnClear" class="btn btn-secondary btn-sm" onclick="return Clear();"><i class="icons icon-close"></i>&nbsp;Մաքրել</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function Search() {
        $("#grResident").data("kendoGrid").dataSource.read();
        return false;
    }


    function Clear() {
        $("#FirstName").val("");
        $("#LastName").val("");
        $("#grResident").data("kendoGrid").dataSource.read();
        return false;
    }

    function getParameters() {
        return {
            firstName: $("#FirstName").val(),
            lastName: $("#LastName").val()
        };
    }

    function InsertResident() {
        window.location = '@Url.Action("ResidentTemplate", "Resident")';
    }

    function UpdateResident(e) {
        var row = $(e.target).closest("tr");
        var grid = $("#grResident").data("kendoGrid");
        var dataItem = grid.dataItem(row);
        window.location = '@Url.Action("InitResidentTemplateByResidentID", "Resident")/?residentID=' + dataItem.ResidentID;
    }


    function DeleteResident(e) {
        var row = $(e.target).closest("tr");
        var grid = $("#grResident").data("kendoGrid");
        var dataItem = grid.dataItem(row);
        var r = confirm("Համոզված ե՞ք, որ ցանկանում եք հեռացնել քաղաքացու գրառումը");
        if (r == false) {
            return false;
        }
        var rt = false;
        var dt;
        var q = $.ajax({
            url: '@Url.Action("DeleteResident", "Resident")',
            dataType: "json",
            type: "GET",
            data: { ResidentID: dataItem.ResidentID },
            async: false,
            success: function (data) { dt = data; rt = true; },
            error: function (xhr) { dt = xhr; rt = false; }
        });
        if (rt == true) {
            if (dt != "DELETE_SUCCESS") {
                alert(JSON.stringify(dt));
            }
            else {
                $("#grResident").data("kendoGrid").dataSource.read();
            }
        }
        else {
            alert(dt);
            return false;
        }
        return false;
    }

    function onIssueDetailExpand(e) {
        currentIssueIndex = $(e.masterRow).index(".k-master-row");
        var selectedItem = this.dataItem(e.masterRow);
        RID = selectedItem.ResidentID;
        this.collapseRow(this.tbody.find(' > tr.k-master-row').not(e.masterRow));
    }

</script>

@(Html.Kendo().Grid<eLConsultation.Data.ResidentSetItem>()
          .Name("grResident")
          .NoRecords("Գրառումներ չկան")
          .Columns(columns =>
          {
              columns.Bound(c => c.IdentificatorNumber).Title("Ա․Հ․Փ․").Width(120);
              columns.Bound(c => c.ResidentName);
              columns.Bound(c => c.BirthYear).Title("Ծննդայան տ/թ").Width(135).MinScreenWidth(768).HtmlAttributes(new { style = "text-align:center" });
              columns.Bound(c => c.ResidentRegistrationLocation).MinScreenWidth(768);
              columns.Command(commands =>
              {
                  commands.Custom("cmdUpdateResident").Text(" ").Click("UpdateResident").HtmlAttributes(new { @class = "Update_Icon" });
                  commands.Custom("cmdDeleteResident").Text(" ").Click("DeleteResident").HtmlAttributes(new { @class = "Delete_Icon" });
              }).Title("Հրամաններ").Width(120);
          })
          .Events(e => e.DataBound("showCommandIcons").DetailExpand("onIssueDetailExpand"))
          .Sortable()
          .Resizable(resize => resize.Columns(true))
          .Scrollable()
          .Reorderable(reorder => reorder.Columns(true))
          .Pageable(pager => pager.PageSizes(new[] { 10, 15, 25, 50, 100 }))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Events(events => events.Error("error_handler"))
              .Read(read => read.Action("FilterResidents", "Resident").Data("getParameters"))
          )
          .ClientDetailTemplateId("template")
)
<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
          .Name("tabStrip_#=ResidentID#")
          .SelectedIndex(0)
          .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
          .Items(items =>
          {
          items.Add().Text("Բանավոր").Content(@<text>
        @(Html.Kendo().Grid<eLConsultation.Data.ResidentOralConsultationSet>()
                      .Name("Oral_#=ResidentID#")
                      .NoRecords("Գրառումներ չկան")
                      .Events(e => e.DataBound("showCommandIcons"))
                        .Columns(columns =>
                        {
                            columns.Bound(o => o.OralConsultationID).Hidden();
                            columns.Bound(c => c.IssueName);
                            columns.Bound(c => c.OralConsultationDate);
                            columns.Command(commands =>
                            {
                                commands.Custom("cmdUpdateOralConsultation_#=ResidentID#").Text(" ").Click("UpdateOralConsultation").HtmlAttributes(new { @class = "Update_Icon" });
                                commands.Custom("cmdDeleteOralConsultation_#=ResidentID#").Text(" ").Click("DeleteOralConsultation").HtmlAttributes(new { @class = "Delete_Icon" });
                            }).Title("Հրամաններ").Width(120);
                        })

                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Events(events => events.Error("error_handler"))
                            .Read(read => read.Action("GetOralConsultationsByResidentID", "Resident", new { residentID = "#=ResidentID#" }))
                                    )
                       .ToClientTemplate()
        )
        </text>);
              items.Add().Text("Գրավոր").Content(@<text>
    @(Html.Kendo().Grid<eLConsultation.Data.ResidentTypeConsultationSet>()
                      .Name("Type_#=ResidentID#")
                      .NoRecords("Գրառումներ չկան")
                      .Events(e => e.DataBound("showCommandIcons"))
                        .Columns(columns =>
                        {
                            columns.Bound(o => o.TypeConsultationID).Hidden();
                            columns.Bound(c => c.TypeConsultationName);
                            columns.Bound(c => c.TypeConsultationDate);
                            columns.Command(commands =>
                            {
                                commands.Custom("cmdUpdateTypeConsultation_#=ResidentID#").Text(" ").Click("UpdateTypeConsultation").HtmlAttributes(new { @class = "Update_Icon" });
                                commands.Custom("cmdDeleteTypeConsultation_#=ResidentID#").Text(" ").Click("DeleteTypeConsultation").HtmlAttributes(new { @class = "Delete_Icon" });
                            }).Title("Հրամաններ").Width(120);
                        })

                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Events(events => events.Error("error_handler"))
                            .Read(read => read.Action("GetTypeConsultationsByResidentID", "Resident", new { residentID = "#=ResidentID#" }))
                                    )
                       .ToClientTemplate()
    )
    </text>);
          })
          .ToClientTemplate())
</script>
<script type="text/javascript">
    function UpdateOralConsultation(e) {
        var gridName = "#Oral_" + RID;
        var row = $(e.target).closest("tr");
        var grid = $(gridName).data("kendoGrid");
        var dataItem = grid.dataItem(row);
        window.location = '@Url.Action("UpdateOralConsultation", "OralConsultation")/?oralConsultationID=' + dataItem.OralConsultationID;
    }

    function DeleteOralConsultation(e) {
        var gridName = "#Oral_" + RID;
        var row = $(e.target).closest("tr");
        var grid = $(gridName).data("kendoGrid");
        var dataItem = grid.dataItem(row);
        var r = confirm("Համոզված ե՞ք, որ ցանկանում եք հեռացնել խորհրդատվության գրառումը");
        if (r == false) {
            return false;
        }
        var rt = false;
        var dt;
        var q = $.ajax({
            url: '@Url.Action("DeleteOralConsultation", "OralConsultation")',
            dataType: "json",
            type: "GET",
            data: { oralConsultationID: dataItem.OralConsultationID },
            async: false,
            success: function (data) { dt = data; rt = true; },
            error: function (xhr) { dt = xhr; rt = false; }
        });
        if (rt == true) {
            if (dt != "DELETE_SUCCESS") {
                alert(JSON.stringify(dt));
            }
            else {
                grid.dataSource.read();
            }
        }
        else {
            alert(dt);
            return false;
        }
        return false;
    }

    function UpdateTypeConsultation(e) {
        var gridName = "#Type_" + RID;
        var row = $(e.target).closest("tr");
        var grid = $(gridName).data("kendoGrid");
        var dataItem = grid.dataItem(row);
        window.location = '@Url.Action("UpdateTypeConsultation", "TypeConsultation")/?typeConsultationID=' + dataItem.TypeConsultationID;
    }

    function DeleteTypeConsultation(e) {
        var gridName = "#Type_" + RID;
        var row = $(e.target).closest("tr");
        var grid = $(gridName).data("kendoGrid");
        var dataItem = grid.dataItem(row);
        var r = confirm("Համոզված ե՞ք, որ ցանկանում եք հեռացնել խորհրդատվության գրառումը");
        if (r == false) {
            return false;
        }
        var rt = false;
        var dt;
        var q = $.ajax({
            url: '@Url.Action("Delete", "TypeConsultation")',
            dataType: "json",
            type: "GET",
            data: { typeConsultationID: dataItem.TypeConsultationID },
            async: false,
            success: function (data) { dt = data; rt = true; },
            error: function (xhr) { dt = xhr; rt = false; }
        });
        if (rt == true) {
            if (dt != "DELETE_SUCCESS") {
                alert(JSON.stringify(dt));
            }
            else {
                grid.dataSource.read();
            }
        }
        else {
            alert(dt);
            return false;
        }
        return false;
    }
</script>