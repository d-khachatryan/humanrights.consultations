@model eLConsultation.Data.TypeConsultationItem
@Styles.Render("~/Content/accordion")
@{
    ViewBag.Title = "Գրավոր Խորհրդատվություն";
    Layout = "~/Views/Shared/_LayoutNull.cshtml";
}
<script type="text/javascript">
    function getParameters() {
        return {
            prmGUID: '@Model.GUID'
        };
    }
</script>
<p>@ViewBag.PageGUID</p>
@using (Html.BeginForm("SaveTypeConsultation", "TypeConsultation", FormMethod.Post, new { id = "frmTypeConsultationt" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.TypeConsultationID)
    @Html.HiddenFor(model => model.GUID)
    @Html.HiddenFor(model => model.InitializationType)
    @Html.HiddenFor(model => model.IssueID)
    @Html.HiddenFor(model => model.ResidentID)
    <div class="card" style="max-width:670px; margin:0 auto">
        <div class="card-header">
            <h5 style="color:#21A8D8; text-align:center">@ViewBag.Title</h5>
        </div>
        <header class="header card-header">
            @if (ViewBag.IssueCategoryID == 1)
            {
                <h6 style="color:#21A8D8">Քաղաքացի</h6>
                <div class="consultationTemplateRresident">
                    <p>
                        Ա․Ա․Հ․։
                        <span>
                            @ViewBag.ResidentName
                        </span>
                    </p>
                    <p>
                        Ա․Հ․Փ․։
                        <span>@ViewBag.IdentificatorNumber</span>
                    </p>
                    <p>
                        Ծննդյան ա/թ։
                        <span>@ViewBag.BirthDate</span>
                    </p>
                </div>
            }
            @if (ViewBag.IssueCategoryID == 2)
            {
                <h6 style="color:#21A8D8">Կազմակերպություն</h6>
                <div class="consultationTemplateRresident">
                    <p>
                        Անվանում։
                        <span>
                            @ViewBag.CompanyName
                        </span>
                    </p>
                </div>
            }
        </header>
        <header class="header card-header">
            <h6 style="color:#21A8D8">Խնդիր</h6>
            <div class="consultationTemplateRresident">
                <p>
                    Անվանումը։
                    <span>
                        @Html.DisplayFor(model => model.IssueName)
                    </span>
                </p>
                <p>
                    Ամսաթիվ։
                    <span>@Html.DisplayFor(model => model.IssueDate)</span>
                </p>
                <div class="issueDescription">
                    <div>Նկարագրություն։</div>
                    <div style="padding:6px">
                        @MvcHtmlString.Create(HttpUtility.HtmlDecode(@Model.IssueDescription))
                    </div>
                </div>
            </div>
        </header>
        

        <div class="accordion consultationTemplateBody card-body">
            <div class="card">
                <div class="card-body">
                    <div class="form-group col-lg-6">
                        @Html.LabelFor(model => model.TypeConsultationDate, new { @class = "control-label" })
                        @Html.Kendo().DatePickerFor(model => model.TypeConsultationDate).HtmlAttributes(new { @class = "form-control" })
                    </div>
                    <div class="form-group col-lg-12">
                        @Html.LabelFor(model => model.TypeConsultationName, new { @class = "control-label" })
                        @Html.Kendo().TextBoxFor(model => model.TypeConsultationName).HtmlAttributes(new { @class = "form-control" })
                    </div>
                    <div class="form-group col-lg-12">
                        @Html.LabelFor(model => model.ConsultationTypeID, new { @class = "control-label" })
                        @(Html.Kendo().ComboBoxFor(model => model.ConsultationTypeID)
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Placeholder("-- Ընտրել --")
                                .Filter(FilterType.StartsWith)
                                .HtmlAttributes(new { @class = "form-control" })
                                .BindTo(ViewBag.vbConsultationTypes)
                        )
                    </div>
                    <div class="form-group col-lg-12">
                        @Html.LabelFor(model => model.ProcessStatusID, new { @class = "control-label" })
                        @(Html.Kendo().ComboBoxFor(model => model.ProcessStatusID)
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Placeholder("-- Ընտրել --")
                                .Filter(FilterType.StartsWith)
                                .HtmlAttributes(new { @class = "form-control" })
                                .BindTo(ViewBag.vbProcessStatuses)
                        )
                    </div>
                    <div class="form-group col-lg-12">
                        @Html.LabelFor(model => model.ConsultationResultID, new { @class = "control-label" })
                        @(Html.Kendo().ComboBoxFor(model => model.ConsultationResultID)
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Placeholder("-- Ընտրել --")
                                .Filter(FilterType.StartsWith)
                                .HtmlAttributes(new { @class = "form-control" })
                                .BindTo(ViewBag.vbConsultationResults)
                        )
                    </div>
                    <div class="form-group col-lg-12">
                        @Html.LabelFor(model => model.TargetGroupID, new { @class = "control-label" })
                        @(Html.Kendo().ComboBoxFor(model => model.TargetGroupID)
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Placeholder("-- Ընտրել --")
                                .Filter(FilterType.StartsWith)
                                .HtmlAttributes(new { @class = "form-control" })
                                .BindTo(ViewBag.vbTargetGroups)
                        )
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header">Խորհրդատու</div>
                <div class="card-body padding-0">
                    @(Html.Kendo().Grid<eLConsultation.Data.TypeConsultationConsultantItem>()
                                .Name("grConsultant")
                                .Events(e => e.DataBound("correctPopUpGrid"))
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.ID).Hidden();
                                    columns.Bound(p => p.TypeConsultationConsultantID).Hidden();
                                    columns.Bound(p => p.TypeConsultationID).Hidden();
                                    columns.Bound(p => p.ConsultantID).Hidden();
                                    columns.Bound(p => p.ConsultantName);
                                    columns.Command(command =>
                                    {
                                        command.Edit().Text(" ").UpdateText("Պահպանել").CancelText("Չեղարկել");
                                        command.Destroy().Text(" ");
                                    }).Width(115);
                                })
                                .HtmlAttributes(new { style = "height: 271px" })
                                .ToolBar(toolbar => toolbar.Create().Text("Նոր գրառում"))
                                .Editable(editable => editable.Mode(GridEditMode.PopUp)
                                    .TemplateName("TypeConsultationConsultantPopUp")
                                    .Window(w => w.Title("Մուտքի պատուհան").Events(e => e
            .Deactivate("correctPopUpGrid")
            .Activate("correctPopUpGrid")
            .Open("correctPopUpGrid")
            )))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Model(model => model.Id(p => p.ID))
                                    .Create(update => update.Action("TypeConsultationConsultantCreate", "TypeConsultationConsultant").Data("getParameters"))
                                    .Read(read => read.Action("TypeConsultationConsultantSelect", "TypeConsultationConsultant").Data("getParameters"))
                                    .Update(update => update.Action("TypeConsultationConsultantUpdate", "TypeConsultationConsultant"))
                                    .Destroy(update => update.Action("TypeConsultationConsultantDelete", "TypeConsultationConsultant"))
                                )
                                .Scrollable()
                    )
                </div>
            </div>
        <div class="card">
            <div class="card-header">Կառույց որը խախտում է կատարել</div>
            <div class="card-body padding-0">
                @(Html.Kendo().Grid<eLConsultation.Data.TypeConsultationInstanceItem>()
                            .Name("grConsultationInstance")
                            .Events(e => e.DataBound("correctPopUpGrid"))
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.ID).Hidden();
                                columns.Bound(p => p.TypeConsultationInstanceID).Hidden();
                                columns.Bound(p => p.TypeConsultationID).Hidden();
                                columns.Bound(p => p.OrganizationID).Hidden();
                                columns.Bound(p => p.OrganizationName);
                                columns.Command(command =>
                                {
                                    command.Edit().Text(" ").UpdateText("Պահպանել").CancelText("Չեղարկել");
                                    command.Destroy().Text(" ");
                                }).Width(115);
                            })
                            .HtmlAttributes(new { style = "height: 271px" })
                            .ToolBar(toolbar => toolbar.Create().Text("Նոր գրառում"))
                            .Editable(editable => editable.Mode(GridEditMode.PopUp)
                                .TemplateName("TypeConsultationInstancePopUp")
                                .Window(w => w.Title("Մուտքի պատուհան").Events(e => e
            .Deactivate("correctPopUpGrid")
            .Activate("correctPopUpGrid")
            .Open("correctPopUpGrid")
            )))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Model(model => model.Id(p => p.ID))
                                .Create(update => update.Action("TypeConsultationInstanceCreate", "TypeConsultationInstance").Data("getParameters"))
                                .Read(read => read.Action("TypeConsultationInstanceSelect", "TypeConsultationInstance").Data("getParameters"))
                                .Update(update => update.Action("TypeConsultationInstanceUpdate", "TypeConsultationInstance"))
                                .Destroy(update => update.Action("TypeConsultationInstanceDelete", "TypeConsultationInstance"))
                            )
                            .Scrollable()
                )
            </div>
        </div>
        <div class="card">
            <div class="card-header">Գրություն</div>
            <div class="card-body padding-0">
                @(Html.Kendo().Grid<eLConsultation.Data.TypeConsultationDeclarationTypeItem>()
                            .Name("grTypeConsultationDeclarationType")
                            .Events(e => e.DataBound("correctPopUpGrid"))
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.ID).Hidden();
                                columns.Bound(p => p.TypeConsultationDeclarationTypeID).Hidden();
                                columns.Bound(p => p.TypeConsultationID).Hidden();
                                columns.Bound(p => p.DeclarationTypeID).Hidden();
                                columns.Bound(p => p.DeclarationTypeName);
                                columns.Bound(p => p.DeclarationDate).Width(95).Title("Ամսաթիվ");
                                columns.Command(command =>
                                {
                                    command.Edit().Text(" ").UpdateText("Պահպանել").CancelText("Չեղարկել");
                                    command.Destroy().Text(" ");
                                }).Width(115);
                            })
                            .HtmlAttributes(new { style = "height: 271px" })
                            .ToolBar(toolbar => toolbar.Create().Text("Նոր գրառում"))
                            .Editable(editable => editable.Mode(GridEditMode.PopUp)
                                .TemplateName("TypeConsultationDeclarationTypePopUp")
                                .Window(w => w.Title("Մուտքի պատուհան").Events(e => e
            .Deactivate("correctPopUpGrid")
            .Activate("correctPopUpGrid")
            .Open("correctPopUpGrid")
            )))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Model(model => model.Id(p => p.ID))
                                .Create(update => update.Action("TypeConsultationDeclarationTypeCreate", "TypeConsultationDeclarationType").Data("getParameters"))
                                .Read(read => read.Action("TypeConsultationDeclarationTypeSelect", "TypeConsultationDeclarationType").Data("getParameters"))
                                .Update(update => update.Action("TypeConsultationDeclarationTypeUpdate", "TypeConsultationDeclarationType"))
                                .Destroy(update => update.Action("TypeConsultationDeclarationTypeDelete", "TypeConsultationDeclarationType"))
                            )
                            .Scrollable()
            )
        </div>
    </div>
    <div class="card">
        <div class="card-header">Իրավունք</div>
        <div class="card-body padding-0">
            @(Html.Kendo().Grid<eLConsultation.Data.TypeConsultationRightItem>()
                                .Name("grRight")
                                .Events(e => e.DataBound("correctPopUpGrid"))
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.ID).Hidden();
                                    columns.Bound(p => p.TypeConsultationRightID).Hidden();
                                    columns.Bound(p => p.TypeConsultationID).Hidden();
                                    columns.Bound(p => p.HumanRightID).Hidden();
                                    columns.Bound(p => p.HumanRightName);
                                    columns.Command(command =>
                                    {
                                        command.Edit().Text(" ").UpdateText("Պահպանել").CancelText("Չեղարկել");
                                        command.Destroy().Text(" ");
                                    }).Width(115);
                                })
                                .HtmlAttributes(new { style = "height: 271px" })
                                .ToolBar(toolbar => toolbar.Create().Text("Նոր գրառում"))
                                .Editable(editable => editable.Mode(GridEditMode.PopUp)
                                    .TemplateName("TypeConsultationRightPopUp")
                                    .Window(w => w.Title("Մուտքի պատուհան").Events(e => e
            .Deactivate("correctPopUpGrid")
            .Activate("correctPopUpGrid")
            .Open("correctPopUpGrid")
            )))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Model(model => model.Id(p => p.ID))
                                    .Create(update => update.Action("TypeConsultationRightCreate", "TypeConsultationRight").Data("getParameters"))
                                    .Read(read => read.Action("TypeConsultationRightSelect", "TypeConsultationRight").Data("getParameters"))
                                    .Update(update => update.Action("TypeConsultationRightUpdate", "TypeConsultationRight"))
                                    .Destroy(update => update.Action("TypeConsultationRightDelete", "TypeConsultationRight"))
                                )
                                .Scrollable()
        )
    </div>
</div>

<div class="accordion-item">
    <a href="#" class="heading">
        <div class="icon"></div>
        <div class="title">Լիազորություններ</div>
    </a>

    <div class="content">
        @(Html.Kendo().Grid<eLConsultation.Data.TypeConsultationPermissionItem>()
                            .Name("grPermission")
                            .Events(e => e.DataBound("correctPopUpGrid"))
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.ID).Hidden();
                                columns.Bound(p => p.UserName);
                                columns.Bound(p => p.IsRead).HtmlAttributes(new { style = "text-align: center;" })
                                        .ClientTemplate("#if(IsRead){#" +
                                               "<i class=\"fa fa-check\"></i>" +
                                               "#} else {#" +
                                               "<i class=\"fa fa-minus\"></i>" +
                                               "# } #");
                                columns.Bound(p => p.IsChange).HtmlAttributes(new { style = "text-align: center;" })
                                        .ClientTemplate("#if(IsChange){#" +
                                               "<i class=\"fa fa-check\"></i>" +
                                               "#} else {#" +
                                               "<i class=\"fa fa-minus\"></i>" +
                                               "# } #");
                                columns.Command(command =>
                                {
                                    command.Edit().Text(" ").UpdateText("Պահպանել").CancelText("Չեղարկել");
                                    command.Destroy().Text(" ");
                                }).Width(115);
                            })
                            .HtmlAttributes(new { style = "height: 271px" })
                            .ToolBar(toolbar => toolbar.Create().Text("Նոր գրառում"))
                            .Editable(editable => editable.Mode(GridEditMode.PopUp)
                                .TemplateName("TypeConsultationPermissionPopUp")
                                .Window(w => w.Title("Մուտքի պատուհան").Events(e => e
            .Deactivate("correctPopUpGrid")
            .Activate("correctPopUpGrid")
            .Open("correctPopUpGrid")
            )))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Model(model => model.Id(p => p.ID))
                                .Create(update => update.Action("TypeConsultationPermissionCreate", "TypeConsultationPermission").Data("getParameters"))
                                .Read(read => read.Action("TypeConsultationPermissionSelect", "TypeConsultationPermission").Data("getParameters"))
                                .Update(update => update.Action("TypeConsultationPermissionUpdate", "TypeConsultationPermission"))
                                .Destroy(update => update.Action("TypeConsultationPermissionDelete", "TypeConsultationPermission"))
                            )
                            .Scrollable()
        )
    </div>
</div>
</div>
<div class="card-footer" style="padding-left:10px;">
    <button type="submit" id="btnSave" class="btn btn-sm btn-primary"><i class="icons icon-check"></i>&nbsp;Հիշել</button>
    <button type="button" class="btn btn-sm btn-secondary" onclick="location.href='@Url.Action("Index", "TypeConsultation")'"><i class="icons icon-close"></i>&nbsp;Չեղարկել</button>
    @Html.ValidationSummary(false, "Առկա են խնդիրներ")
</div>
</div>
}
<div id="errors"> </div>
@Scripts.Render("~/Scripts/accordion.js")

<script>
    $(".validation-summary-errors").addClass("bg-warning")
    $("form").kendoValidator({
        errorTemplate: '<div class="k-widget k-tooltip k-tooltip-validation" style="margin:0.5em; padding:3px 5px;"><span class="fa fa-exclamation-triangle"></span> #=message#<div class="k-callout k-callout-n"></div></div>', // change the default message container to show only an *
        validate: function (e) {
            var html = "";
            if (!e.valid) {
                var errors = this.errors();
                html += "<ul>";
                for (var i = 0; i < errors.length; i++) {
                    html += "<li>" + errors[i] + "</li>";
                }

                html += "</ul>";
            }
            $("#errors").empty().append($(html));
        }
    });
</script>


